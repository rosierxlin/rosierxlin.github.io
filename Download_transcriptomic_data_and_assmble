#Install Aspera to the environment 
wget https://download.asperasoft.com/download/sw/connect/3.9.1/ibm-aspera-connect-3.9.1.171801-linux-g2.12-64.tar.gz
tar zxvf ibm-aspera-connect-3.9.1.171801-linux-g2.12-64.tar.gz
# Install 
bash ibm-aspera-connect-3.9.1.171801-linux-g2.12-64.sh 
# Check if aspera has been successfully installed
cd # go to home file
ls -a # if there is .aspera file, the installation has been successful
# Perminantly change the environment variables
echo 'export PATH=~/.aspera/connect/bin:$PATH' >> ~/.bashrc
source ~/.bashrc 
# check "help"
ascp --help
#set directory to store the list of download link
mkdir ~/Seqs
nano ~/Seqs/sra_list.txt
#paste the below sequences into nano
/vol1/fastq/SRR638/000/SRR6382540/SRR6382540_1.fastq.gz
/vol1/fastq/SRR638/000/SRR6382540/SRR6382540_2.fastq.gz
/vol1/fastq/SRR638/001/SRR6382541/SRR6382541_1.fastq.gz
/vol1/fastq/SRR638/001/SRR6382541/SRR6382541_2.fastq.gz
/vol1/fastq/SRR638/002/SRR6382542/SRR6382542_1.fastq.gz
/vol1/fastq/SRR638/002/SRR6382542/SRR6382542_2.fastq.gz
/vol1/fastq/SRR638/003/SRR6382543/SRR6382543_1.fastq.gz
/vol1/fastq/SRR638/003/SRR6382543/SRR6382543_2.fastq.gz
/vol1/fastq/SRR638/004/SRR6382544/SRR6382544_1.fastq.gz
/vol1/fastq/SRR638/004/SRR6382544/SRR6382544_2.fastq.gz
/vol1/fastq/SRR638/005/SRR6382545/SRR6382545_1.fastq.gz
/vol1/fastq/SRR638/005/SRR6382545/SRR6382545_2.fastq.gz
/vol1/fastq/SRR638/006/SRR6382546/SRR6382546_1.fastq.gz
/vol1/fastq/SRR638/006/SRR6382546/SRR6382546_2.fastq.gz
/vol1/fastq/SRR638/007/SRR6382547/SRR6382547_1.fastq.gz
/vol1/fastq/SRR638/007/SRR6382547/SRR6382547_2.fastq.gz
/vol1/fastq/SRR638/008/SRR6382548/SRR6382548_1.fastq.gz
/vol1/fastq/SRR638/008/SRR6382548/SRR6382548_2.fastq.gz
/vol1/fastq/SRR638/009/SRR6382549/SRR6382549_1.fastq.gz
/vol1/fastq/SRR638/009/SRR6382549/SRR6382549_2.fastq.gz
/vol1/fastq/SRR638/000/SRR6382550/SRR6382550_1.fastq.gz
/vol1/fastq/SRR638/000/SRR6382550/SRR6382550_2.fastq.gz
/vol1/fastq/SRR638/001/SRR6382551/SRR6382551_1.fastq.gz
/vol1/fastq/SRR638/001/SRR6382551/SRR6382551_2.fastq.gz
/vol1/fastq/SRR638/006/SRR6382556/SRR6382556_1.fastq.gz
/vol1/fastq/SRR638/006/SRR6382556/SRR6382556_2.fastq.gz
/vol1/fastq/SRR638/007/SRR6382557/SRR6382557_1.fastq.gz
/vol1/fastq/SRR638/007/SRR6382557/SRR6382557_2.fastq.gz
/vol1/fastq/SRR638/008/SRR6382558/SRR6382558_1.fastq.gz
/vol1/fastq/SRR638/008/SRR6382558/SRR6382558_2.fastq.gz
/vol1/fastq/SRR638/009/SRR6382559/SRR6382559_1.fastq.gz
/vol1/fastq/SRR638/009/SRR6382559/SRR6382559_2.fastq.gz
/vol1/fastq/SRR638/000/SRR6382560/SRR6382560_1.fastq.gz
/vol1/fastq/SRR638/000/SRR6382560/SRR6382560_2.fastq.gz
/vol1/fastq/SRR638/001/SRR6382561/SRR6382561_1.fastq.gz
/vol1/fastq/SRR638/001/SRR6382561/SRR6382561_2.fastq.gz
/vol1/fastq/SRR638/002/SRR6382562/SRR6382562_1.fastq.gz
/vol1/fastq/SRR638/002/SRR6382562/SRR6382562_2.fastq.gz
/vol1/fastq/SRR638/003/SRR6382563/SRR6382563_1.fastq.gz
/vol1/fastq/SRR638/003/SRR6382563/SRR6382563_2.fastq.gz
/vol1/fastq/SRR638/004/SRR6382564/SRR6382564_1.fastq.gz
/vol1/fastq/SRR638/004/SRR6382564/SRR6382564_2.fastq.gz
/vol1/fastq/SRR638/005/SRR6382565/SRR6382565_1.fastq.gz
/vol1/fastq/SRR638/005/SRR6382565/SRR6382565_2.fastq.gz
/vol1/fastq/SRR638/006/SRR6382566/SRR6382566_1.fastq.gz
/vol1/fastq/SRR638/006/SRR6382566/SRR6382566_2.fastq.gz
/vol1/fastq/SRR638/007/SRR6382567/SRR6382567_1.fastq.gz
/vol1/fastq/SRR638/007/SRR6382567/SRR6382567_2.fastq.gz
/vol1/fastq/SRR638/008/SRR6382568/SRR6382568_1.fastq.gz
/vol1/fastq/SRR638/008/SRR6382568/SRR6382568_2.fastq.gz
/vol1/fastq/SRR638/009/SRR6382569/SRR6382569_1.fastq.gz
/vol1/fastq/SRR638/009/SRR6382569/SRR6382569_2.fastq.gz
/vol1/fastq/SRR638/000/SRR6382570/SRR6382570_1.fastq.gz
/vol1/fastq/SRR638/000/SRR6382570/SRR6382570_2.fastq.gz
/vol1/fastq/SRR638/001/SRR6382571/SRR6382571_1.fastq.gz
/vol1/fastq/SRR638/001/SRR6382571/SRR6382571_2.fastq.gz
/vol1/fastq/SRR638/002/SRR6382572/SRR6382572_1.fastq.gz
/vol1/fastq/SRR638/002/SRR6382572/SRR6382572_2.fastq.gz
/vol1/fastq/SRR638/003/SRR6382573/SRR6382573_1.fastq.gz
/vol1/fastq/SRR638/003/SRR6382573/SRR6382573_2.fastq.gz
#press ctrl+O and ctrl+X to save
#call aspera to read the list and download it to the directory ~/Seqs/
nohup ascp -v -QT  -k1 -l 200m -P33001 --mode recv -i ~/.aspera/connect/etc/asperaweb_id_dsa.openssh --host fasp.sra.ebi.ac.uk --user era-fasp --file-list ~/Seqs/sra_list.txt ~/Seqs/ &

#install hisat2 to map the transcriptomic data onto reference genome 
wget  ftp://ftp.ccb.jhu.edu/pub/infphilo/hisat2/downloads/hisat2-2.1.0-source.zip
#download Salvia splendens reference genome and gene annotation
wget ftp://parrot.genomics.cn/gigadb/pub/10.5524/100001_101000/100463/final_genome.fasta
wget ftp://parrot.genomics.cn/gigadb/pub/10.5524/100001_101000/100463/protein_encoding_gene.gff3
#build genome index using hisat2
hisat2-build final_genome.fasta Ssp_gen_index
#make a directory to store the .sam output
mkdir ~/samfle
#use hisat2 to run the alignment, demonstrated as follow
nohup hisat2 -p 16 --dta -x ~/Ssp_gen_ind/Ssp_gen_index -1 ~/Seqs/SRR6382540_1.fastq.gz -2 ~/Seqs/SRR6382540_2.fastq.gz -S ~/samfile/SRR6382540.sam &

#install samtools
conda install samtools=1.11
#use samtools to build index for genome data
samtools  faidx final_genome.fasta 
#batch processing the files
vi view.sh
for i in ~/samfile/*.sam;
do 
i=${i%.sam*};
echo ${i};
nohup samtools view -bhS  -t ~/final_genome.fasta.fai -@ 2 -o ${i}.bam ${i}.sam & 
done
#run the loop
bash view.sh
#arrange the content in .bam files in sequential order
vi sort.sh
for i in ~/samfile/*.bam;
do 
i=${i%.bam*};
echo ${i};
nohup samtools sort -@ 4 -o ${i}.sort.bam ${i}.bam & 
done
#run the loop
bash sort.sh
#To visualize the arranged .bam files, first index these files
nohup samtools index SRR6382540.sort.bam &
nohup samtools index SRR6382541.sort.bam &
nohup samtools index SRR6382542.sort.bam &
nohup samtools index SRR6382543.sort.bam &
nohup samtools index SRR6382544.sort.bam &
nohup samtools index SRR6382545.sort.bam &
nohup samtools index SRR6382546.sort.bam &
nohup samtools index SRR6382547.sort.bam &
nohup samtools index SRR6382548.sort.bam &
nohup samtools index SRR6382549.sort.bam &
nohup samtools index SRR6382550.sort.bam &
nohup samtools index SRR6382551.sort.bam &
nohup samtools index SRR6382556.sort.bam &
nohup samtools index SRR6382557.sort.bam &
nohup samtools index SRR6382558.sort.bam &
nohup samtools index SRR6382559.sort.bam &
nohup samtools index SRR6382560.sort.bam &
nohup samtools index SRR6382561.sort.bam &
nohup samtools index SRR6382562.sort.bam &
nohup samtools index SRR6382563.sort.bam &
nohup samtools index SRR6382564.sort.bam &
nohup samtools index SRR6382565.sort.bam &
nohup samtools index SRR6382566.sort.bam &
nohup samtools index SRR6382567.sort.bam &
nohup samtools index SRR6382568.sort.bam &
nohup samtools index SRR6382569.sort.bam &
nohup samtools index SRR6382570.sort.bam &
nohup samtools index SRR6382571.sort.bam &
nohup samtools index SRR6382572.sort.bam &
nohup samtools index SRR6382573.sort.bam &
#visualize the results
cd ~/samfile
nohup samtools tview SRR6382540.sort.bam ~/final_genome.fasta &
nohup samtools tview SRR6382541.sort.bam ~/final_genome.fasta &
nohup samtools tview SRR6382542.sort.bam ~/final_genome.fasta &
nohup samtools tview SRR6382543.sort.bam ~/final_genome.fasta &
nohup samtools tview SRR6382544.sort.bam ~/final_genome.fasta &
nohup samtools tview SRR6382545.sort.bam ~/final_genome.fasta &
nohup samtools tview SRR6382546.sort.bam ~/final_genome.fasta &
nohup samtools tview SRR6382547.sort.bam ~/final_genome.fasta &
nohup samtools tview SRR6382548.sort.bam ~/final_genome.fasta &
nohup samtools tview SRR6382549.sort.bam ~/final_genome.fasta &
nohup samtools tview SRR6382550.sort.bam ~/final_genome.fasta &
nohup samtools tview SRR6382551.sort.bam ~/final_genome.fasta &
nohup samtools tview SRR6382556.sort.bam ~/final_genome.fasta &
nohup samtools tview SRR6382557.sort.bam ~/final_genome.fasta &
nohup samtools tview SRR6382558.sort.bam ~/final_genome.fasta &
nohup samtools tview SRR6382559.sort.bam ~/final_genome.fasta &
nohup samtools tview SRR6382560.sort.bam ~/final_genome.fasta &
nohup samtools tview SRR6382561.sort.bam ~/final_genome.fasta &
nohup samtools tview SRR6382562.sort.bam ~/final_genome.fasta &
nohup samtools tview SRR6382563.sort.bam ~/final_genome.fasta &
nohup samtools tview SRR6382564.sort.bam ~/final_genome.fasta &
nohup samtools tview SRR6382565.sort.bam ~/final_genome.fasta &
nohup samtools tview SRR6382566.sort.bam ~/final_genome.fasta &
nohup samtools tview SRR6382567.sort.bam ~/final_genome.fasta &
nohup samtools tview SRR6382568.sort.bam ~/final_genome.fasta &
nohup samtools tview SRR6382569.sort.bam ~/final_genome.fasta &
nohup samtools tview SRR6382570.sort.bam ~/final_genome.fasta &
nohup samtools tview SRR6382571.sort.bam ~/final_genome.fasta &
nohup samtools tview SRR6382572.sort.bam ~/final_genome.fasta &
nohup samtools tview SRR6382573.sort.bam ~/final_genome.fasta &

#assemble the data using stringtie
vi stringtie1.sh
for i in ~/samfile/*sort.bam; 
do 
i=${i%.sort.bam*}; 
echo ${i};
nohup stringtie -p 8 -G  ~/protein_encoding_gene.gff3 
 -o ${i}.gff3 -l  ${i} ${i}.sort.bam & 
done

#Merge the transcripts. First, set up mergelist
cd ~/samfile

vi mergelist.txt
SRR6382540.gff3
SRR6382541.gff3
SRR6382542.gff3
SRR6382543.gff3
SRR6382544.gff3
SRR6382545.gff3
SRR6382546.gff3
SRR6382547.gff3
SRR6382548.gff3
SRR6382549.gff3
SRR6382550.gff3
SRR6382551.gff3
SRR6382556.gff3
SRR6382557.gff3
SRR6382558.gff3
SRR6382559.gff3
SRR6382560.gff3
SRR6382561.gff3
SRR6382562.gff3
SRR6382563.gff3
SRR6382564.gff3
SRR6382565.gff3
SRR6382566.gff3
SRR6382567.gff3
SRR6382568.gff3
SRR6382569.gff3
SRR6382570.gff3
SRR6382571.gff3
SRR6382572.gff3
SRR6382573.gff3

#merge all the transcripts
nohup stringtie --merge -p 8 -G ~/protein_encoding_gene.gff3   -o stringtie_merged.gff3  mergelist.txt &

#use gffCompare to determine how many transcripts are fully or partially matched to annotated genes, and calculate how many of them are new
nohup gffcompare -r  ~/protein_encoding_gene.gff3  -G  -o merged ~/samfile/stringtie_merged.gff3 &

#re-assemble the transcripts and estimates the gene abundancy
cd ~/samfile

vi reassemble.sh
for i in *.sort.bam; 
do 
i=${i%.sort.bam*}; 
echo ${i};
nohup stringtie -e -B -p 8 -G stringtie_merged.gtf -o ballgown/${i}/${i}.gtf  ${i}.sort.bam & 
done

#Use DEseq2 for gene expression analysis
#first, convert the .ballgown file into .csv file for deseq2
#download the Python script, prepDE.py
wget  http://ccb.jhu.edu/software/stringtie/dl/prepDE.py
#use prepDE.py for convertion
prepDE.py -i ~/samfile/ballgown




